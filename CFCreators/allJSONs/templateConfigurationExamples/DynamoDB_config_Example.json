{
  "nodes": [
    {
      "id": {
        "_value": "dynamodb-1",
        "_inputType": "auto-generated",
        "_description": "Unique identifier for the node, automatically generated by the system"
      },
      "type": {
        "_value": "DynamoDB",
        "_inputType": "fixed",
        "_description": "Resource type, fixed as DynamoDB for DynamoDB tables"
      },
      "position": {
        "_inputType": "auto-generated",
        "_description": "Canvas position, automatically managed by ReactFlow",
        "x": {
          "_value": 100,
          "_inputType": "auto-generated"
        },
        "y": {
          "_value": 200,
          "_inputType": "auto-generated"
        }
      },
      "data": {
        "label": {
          "_value": "DynamoDB",
          "_inputType": "fixed",
          "_description": "Display label on the canvas node"
        },
        "tableName": {
          "_value": "my-table",
          "_inputType": "text",
          "_description": "Name of the DynamoDB table (will be prefixed with <build-id>)",
          "_validation": {
            "required": true,
            "minLength": 3,
            "maxLength": 255,
            "pattern": "^[a-zA-Z0-9_.-]+$"
          },
          "_note": "Table identifier will be auto-generated as: <build-id>-<tableName>"
        },
        "partitionKey": {
          "_value": "id",
          "_inputType": "text",
          "_description": "Partition key attribute name (primary key for data distribution)",
          "_validation": {
            "required": true,
            "minLength": 1,
            "maxLength": 255
          },
          "_note": "Must be unique across items. Used for data distribution across partitions"
        },
        "partitionKeyType": {
          "_value": "S",
          "_inputType": "choice",
          "_description": "Data type of the partition key",
          "_choices": [
            "S",
            "N"
          ],
          "_choiceDescriptions": {
            "S": "String",
            "N": "Number"
          },
          "_note": "S = String (most common), N = Number"
        },
        "sortKey": {
          "_value": "",
          "_inputType": "text",
          "_description": "Sort key attribute name (optional, for ordering items with same partition key)",
          "_validation": {
            "required": false,
            "minLength": 0,
            "maxLength": 255
          },
          "_note": "Leave empty if no sort key needed. Enables range queries and ordering"
        },
        "sortKeyType": {
          "_value": "S",
          "_inputType": "choice",
          "_description": "Data type of the sort key (only used if sortKey is provided)",
          "_choices": [
            "S",
            "N"
          ],
          "_choiceDescriptions": {
            "S": "String",
            "N": "Number"
          },
          "_note": "Only applies if sortKey is specified"
        }
      },
      "measured": {
        "_inputType": "auto-generated",
        "_description": "Canvas node dimensions, automatically managed by ReactFlow",
        "width": {
          "_value": 40,
          "_inputType": "auto-generated"
        },
        "height": {
          "_value": 40,
          "_inputType": "auto-generated"
        }
      }
    }
  ],
  "edges": [],
  "viewport": {
    "x": 0,
    "y": 0,
    "zoom": 1
  },
  "_hardcodedValues": {
    "_description": "Values that are hardcoded in the CloudFormation template and cannot be modified by users",
    "global": {
      "AWSTemplateFormatVersion": {
        "_value": "2010-09-09",
        "_description": "CloudFormation template format version (AWS standard)"
      }
    },
    "dynamodbTable": {
      "billingMode": {
        "_value": "PAY_PER_REQUEST",
        "_description": "On-demand billing (pay per request, no capacity planning required)"
      },
      "sseEnabled": {
        "_value": true,
        "_description": "Server-side encryption always enabled (AWS-owned key)"
      },
      "sseType": {
        "_value": "AES256",
        "_description": "Encryption using AWS-owned key (no additional cost)"
      },
      "pointInTimeRecoveryEnabled": {
        "_value": true,
        "_description": "Continuous backups enabled (restore to any point in last 35 days)"
      },
      "deletionProtectionEnabled": {
        "_value": false,
        "_description": "Deletion protection disabled by default"
      },
      "streamEnabled": {
        "_value": false,
        "_description": "DynamoDB Streams disabled (can be enabled if needed for CDC/Lambda triggers)"
      },
      "timeToLiveEnabled": {
        "_value": false,
        "_description": "TTL disabled (can be enabled later for automatic item expiration)"
      },
      "tags": {
        "_value": [
          {
            "key": "ManagedBy",
            "value": "CloudFormation"
          }
        ],
        "_description": "Default tags applied to all tables"
      }
    },
    "resourceNaming": {
      "tableNameFormat": {
        "_value": "{buildId}-{tableName}",
        "_description": "Auto-generated format: build ID + user-provided table name"
      },
      "logicalIdFormat": {
        "_value": "DynamoDB{sanitizedNodeId}",
        "_description": "CloudFormation logical resource ID format"
      }
    },
    "outputs": {
      "_description": "CloudFormation outputs automatically generated for each DynamoDB table",
      "tableName": {
        "_format": "{LogicalId}Name",
        "_description": "The table name"
      },
      "arn": {
        "_format": "{LogicalId}Arn",
        "_description": "The Amazon Resource Name (ARN) of the table"
      },
      "streamArn": {
        "_format": "{LogicalId}StreamArn",
        "_description": "The ARN of the DynamoDB stream (if streams enabled)"
      }
    }
  },
  "_metadata": {
    "version": "1.0.0",
    "resourceType": "AWS::DynamoDB::Table",
    "description": "Simplified DynamoDB table configuration with minimal user inputs. DynamoDB is a fully managed NoSQL database.",
    "inputTypes": {
      "text": "Free-form text input from user",
      "choice": "Single selection dropdown from predefined options",
      "fixed": "Fixed value, not editable by user",
      "auto-generated": "Automatically generated by system"
    },
    "userConfigurableFields": [
      "tableName - User provides table name (auto-prefixed with build-id)",
      "partitionKey - User defines partition key attribute name",
      "partitionKeyType - User selects data type (String or Number)",
      "sortKey - Optional sort key attribute name (leave empty if not needed)",
      "sortKeyType - Data type for sort key (only if sortKey provided)"
    ],
    "hardcodedSettings": [
      "billingMode: PAY_PER_REQUEST (on-demand, no capacity planning)",
      "sseEnabled: true (encryption at rest with AWS-owned key)",
      "pointInTimeRecoveryEnabled: true (35-day continuous backups)",
      "deletionProtectionEnabled: false",
      "streamEnabled: false (DynamoDB Streams disabled by default)",
      "timeToLiveEnabled: false (TTL disabled by default)"
    ],
    "keyDesignNotes": [
      "Partition key: Must have high cardinality (many unique values) for even distribution",
      "Sort key: Optional, enables range queries and ordering within partition",
      "Common patterns: User tables use 'userId' as partition key, Time-series use 'userId' + 'timestamp'",
      "Single-table design: Use generic keys like 'PK' and 'SK' for flexibility"
    ],
    "securityNotes": [
      "Encryption at rest is always enabled (AWS-owned key)",
      "Point-in-time recovery enabled for data protection",
      "Use IAM policies for fine-grained access control",
      "No public internet access (accessed via AWS SDK/API only)"
    ],
    "costConsiderations": {
      "freeTier": "25 GB storage, 25 WCU, 25 RCU (always free, not just first 12 months)",
      "billing": "PAY_PER_REQUEST = $1.25 per million writes, $0.25 per million reads",
      "storage": "$0.25 per GB per month (first 25 GB free)",
      "backups": "Point-in-time recovery adds ~$0.20 per GB per month",
      "optimization": "Free tier covers most small-to-medium applications. On-demand billing ideal for unpredictable workloads"
    }
  }
}