{
  "nodes": [
    {
      "id": {
        "_value": "s3-1",
        "_inputType": "auto-generated",
        "_description": "Unique identifier for the node, automatically generated by the system"
      },
      "type": {
        "_value": "S3",
        "_inputType": "fixed",
        "_description": "Resource type, fixed as S3 for S3 buckets"
      },
      "position": {
        "_inputType": "auto-generated",
        "_description": "Canvas position, automatically managed by ReactFlow",
        "x": {
          "_value": 200,
          "_inputType": "auto-generated"
        },
        "y": {
          "_value": 100,
          "_inputType": "auto-generated"
        }
      },
      "data": {
        "label": {
          "_value": "S3",
          "_inputType": "fixed",
          "_description": "Display label on the canvas node"
        },
        "bucketName": {
          "_value": "my-app-bucket",
          "_inputType": "text",
          "_description": "Name of the S3 bucket (must be globally unique across all AWS accounts)",
          "_validation": {
            "required": false,
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          "_note": "If not provided, AWS will auto-generate a unique name. Must be lowercase letters, numbers, and hyphens only. Cannot start or end with a hyphen."
        }
      },
      "measured": {
        "_inputType": "auto-generated",
        "_description": "Canvas node dimensions, automatically managed by ReactFlow",
        "width": {
          "_value": 40,
          "_inputType": "auto-generated"
        },
        "height": {
          "_value": 40,
          "_inputType": "auto-generated"
        }
      }
    }
  ],
  "edges": [],
  "viewport": {
    "x": 0,
    "y": 0,
    "zoom": 1
  },
  "_hardcodedValues": {
    "_description": "Values that are hardcoded in the CloudFormation template and cannot be modified by users",
    "global": {
      "AWSTemplateFormatVersion": {
        "_value": "2010-09-09",
        "_description": "CloudFormation template format version (AWS standard)"
      }
    },
    "s3Bucket": {
      "ownershipControls": {
        "_value": "BucketOwnerEnforced",
        "_description": "Disables ACLs and ensures bucket owner owns all objects",
        "_note": "This is AWS best practice as of 2023"
      },
      "publicAccessBlockConfiguration": {
        "_description": "Block public access to the bucket (security best practice)",
        "blockPublicAcls": {
          "_value": true,
          "_description": "Block public ACLs"
        },
        "blockPublicPolicy": {
          "_value": true,
          "_description": "Block public bucket policies"
        },
        "ignorePublicAcls": {
          "_value": true,
          "_description": "Ignore public ACLs"
        },
        "restrictPublicBuckets": {
          "_value": true,
          "_description": "Restrict public bucket policies"
        }
      },
      "encryption": {
        "_enabled": true,
        "algorithm": {
          "_value": "AES256",
          "_description": "Uses AWS-managed encryption keys (SSE-S3)"
        },
        "_note": "Server-side encryption is always enabled for security"
      },
      "versioning": {
        "_enabled": false,
        "_description": "Versioning is disabled by default",
        "_note": "Can be enabled in future versions"
      }
    },
    "outputs": {
      "_description": "CloudFormation outputs automatically generated for each S3 bucket",
      "bucketName": {
        "_format": "{LogicalId}Name",
        "_description": "The name of the S3 bucket"
      },
      "bucketArn": {
        "_format": "{LogicalId}Arn",
        "_description": "The Amazon Resource Name (ARN) of the bucket"
      },
      "bucketDomainName": {
        "_format": "{LogicalId}DomainName",
        "_description": "The domain name of the bucket (for accessing objects)"
      },
      "bucketWebsiteUrl": {
        "_format": "{LogicalId}WebsiteURL",
        "_description": "The website URL if static website hosting is enabled",
        "_note": "Only included if publicAccess is true"
      }
    },
    "resourceNaming": {
      "logicalIdFormat": {
        "_value": "S3{sanitizedNodeId}",
        "_description": "CloudFormation logical resource ID format (removes hyphens, colons, underscores from node ID)"
      }
    }
  },
  "_metadata": {
    "version": "1.0.0",
    "resourceType": "AWS::S3::Bucket",
    "description": "Minimal S3 bucket configuration - only bucket name is user-configurable",
    "inputTypes": {
      "text": "Free-form text input from user",
      "fixed": "Fixed value, not editable by user",
      "auto-generated": "Automatically generated by system"
    },
    "securityDefaults": {
      "encryption": "Always enabled (AES-256/SSE-S3)",
      "publicAccess": "Always blocked (all 4 public access settings set to true)",
      "versioning": "Disabled by default",
      "ownershipControls": "BucketOwnerEnforced (ACLs disabled)"
    },
    "notes": {
      "simplicity": "This is an intentionally minimal configuration for ease of use",
      "bucketName": "If bucketName is not provided or empty, AWS will auto-generate a unique name",
      "futureEnhancements": "Versioning, lifecycle rules, CORS, and other features can be added later if needed"
    }
  }
}